#Algorithm
INPUT: Pre-processed data of all groups,
Nb→ Number of benign executables and Nm→ Number of malware executables
OUTPUT: List of features.
BEGIN
 for all groups GK do
 for all ith benign executable in the group GK do
 Compute the normalized frequency FKb of each opcode oj
 FKb
(oj) = ( fi(oj ∑ ))/ Nb
 end for
 for all ith malware executable in the group GK do
 Compute the normalized frequency FKm of each opcode oj
 FK m
(oj) = ( fi(oj ∑ ))/ Nm
 end for
 for all opcode oj do
 Subtract the frequencies Fkb and Fkm.
 DK (oj) = FKb
(oj)−FK m
(oj)
 end for
Sort the obtained DK(o).
 end for
 Set a threshold on Dk(o) to select the promising opcodes features such that from each
Gk at least 10 opcodes get selected.
 return Union of the selected features of all the groups. 
 
 #Random Forest Classifier
RandomForestClassifier (bootstrap=True,  
class_weight=None, criterion='gini', 
max_depth=17, max_features=10, max_leaf_nodes=None, 
min_impurity_decrease=0.0, min_impurity_split=None, 
min_samples_leaf=3, min_samples_split=2, 
min_weight_fraction_leaf=0.0, n_estimators=50, 
n_jobs=None, oob_score=False, random_state=1, verbose=0
warm_start=False)
